AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::SecretsManager-2020-07-23
Description: "Creation of resources related to rds db password rotation"
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Provide the Environment Name and Project Name for the tags.
        Parameters:
          - ProjectName
          - Environment
      - Label:
          default: Database configuration
        Parameters:
          - DBPasswordCreationAndRotationFromSecretsManager
          - DBEngineMode
          - DBInstanceIdentifier
          - DBMasterUsername
          - DBMasterUserPassword
          - RotateImmediatelyOnUpdate
          - PasswordRotationFrequencyInDays
          - VpcId
          - PublicSubnet1
          - PublicSubnet2
    ParameterLabels:
      ProjectName:
        default: Project Name
      Environment:
        default: Environment Name
      DBEngineMode:
        default: DB engine
      DBMasterUsername:
        default: DB master username
      DBMasterUserPassword:
        default: DB master user password
      DBInstanceIdentifier:
        default: DB Instance Identifier 
      DBPasswordCreationAndRotationFromSecretsManager:
        default: DB Password Creation And Rotation From Secrets Manager
      RotateImmediatelyOnUpdate:
        default: Rotate Immediately On Update
      PasswordRotationFrequencyInDays:
        default: Password Rotation Frequency In Days
      VpcId:
        default: VPC Id
      PublicSubnet1:
        default: Public Subnet 1
      PublicSubnet2:
        default: Public Subnet 2
Parameters:
  ProjectName:
    Description: Enter the Project name
    Type: String
  Environment:
    Description: Enter the Environment name
    Type: String
    Default: Dev
  DBPasswordCreationAndRotationFromSecretsManager:
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
    Description: "Whether or not to enable DB password rotation using secrets manager on a schedule (password management through secrets manager)"
    Type: String
  DBEngineMode:
    Default: mysql
    Description: "Select a RDS Engine Type."
    Type: String
    AllowedValues:
    - mariadb
    - mysql
    - postgres
  DBMasterUsername:
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: "Must begin with a letter and contain only alphanumeric characters."
    Default: msadmin
    Description: "The database admin account username.
      - MariaDB Constraints - Must be 1 to 16 letters or numbers. Can't be a reserved word for the chosen database engine.
      - MySQL Constraints - Must be 1 to 16 letters or numbers. First character must be a letter. Can't be a reserved word for the chosen database engine.
      - PostgreSQL Constraints - Must be 1 to 63 letters or numbers. First character must be a letter. Can't be a reserved word for the chosen database engine."
    MaxLength: "63"
    MinLength: "1"
    Type: String
  DBInstanceIdentifier:
    Default: 'demo'
    Description: "A name for the DB instance."
    MaxLength: "63"
    MinLength: "1"
    Type: String
  DBMasterUserPassword:
    NoEcho: "True"
    Description: The current DB master user password which shall be rotated with the new secret
    Type: String
  RotateImmediatelyOnUpdate:
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
    Description: "whether to rotate the secret immediately or wait until the next scheduled rotation window."
    Type: String
  PasswordRotationFrequencyInDays:
    Default: 90
    Description: "Frequency of password rotation in terms of number of days"
    Type: Number
    MinValue: 1
    MaxValue: 365
  VpcId:
    Description: "Select the VPC Id"
    Type: AWS::EC2::VPC::Id
  PublicSubnet1:
    Description: "Select the PublicSubnet1. Both the public subnets should in different Availability Zone"
    Type: AWS::EC2::Subnet::Id
  PublicSubnet2:
    Description: "Select the PublicSubnet2. Both the public subnets should in different Availability Zone"
    Type: AWS::EC2::Subnet::Id
Conditions:
  DBPasswordRotation: !Equals [ !Ref DBPasswordCreationAndRotationFromSecretsManager, 'true' ]

Resources:
  RDSInstanceRotationSecret:
    Condition: DBPasswordRotation
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: !Join ['', ['Master User Secret ', 'for the DB Instance  ', !Ref DBInstanceIdentifier]]
      SecretString: !Sub '{"username": "${DBMasterUsername}", "password": "${DBMasterUserPassword}"}'
      Name: !Join ['-', [!Ref DBInstanceIdentifier, 'secret']]
      Tags:
        - 
          Key: Secret Name
          Value: !Join ['-', [!Ref DBInstanceIdentifier, 'secret']]

  SecretRDSInstanceAttachment:
    Condition: DBPasswordRotation
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref RDSInstanceRotationSecret
      TargetId: !Ref DBInstanceIdentifier
      TargetType: AWS::RDS::DBInstance

  RDSSecretRotationSchedule:
    Condition: DBPasswordRotation
    Type: AWS::SecretsManager::RotationSchedule
    Properties:
      HostedRotationLambda:
        RotationLambdaName: !Join ['-', [!Ref DBInstanceIdentifier, 'Password-Rotation-Lambda']]
        RotationType: MySQLSingleUser
      SecretId: !Ref RDSInstanceRotationSecret
      RotateImmediatelyOnUpdate: !Ref RotateImmediatelyOnUpdate
      RotationRules:
        AutomaticallyAfterDays: !Ref PasswordRotationFrequencyInDays
  
  SecretsManagerVPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.secretsmanager'
      SubnetIds: 
      - Ref: PublicSubnet1
      - Ref: PublicSubnet2
      VpcEndpointType: Interface
      VpcId: !Ref VpcId